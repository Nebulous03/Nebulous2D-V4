package nebulous.main;

import java.nio.FloatBuffer;

import org.lwjgl.opengl.GL11;

import static org.lwjgl.opengl.GL15.*;
import static org.lwjgl.opengl.GL30.*;

import nebulous.graphics.Shader;
import nebulous.utils.BufferUtilities;

public class GameMain extends Game{

	private static final int width = 1366;
	private static final int height = 768;
	private static final String title = "Nebulous2D Game Engine";

	public static GameMain game = new GameMain();
	
	public static void main(String[] args) {
		game.getWindow().vSync(false);
		game.start();
	}
	
	public GameMain() {
		super(width, height, title);
	}

	@Override
	public void init() {
		Shader shader = new Shader("shaders/shader.vs", "shaders/shader.fs");
		
		float[] vertices = new float[]{
			     0.0f,  0.5f, 0.0f,
			    -0.5f, -0.5f, 0.0f,
			     0.5f, -0.5f, 0.0f
			};
		
		FloatBuffer vertexBuffer = BufferUtilities.createFloatBuffer(vertices.length);
		vertexBuffer.put(vertices).flip();
		
		int vao = glGenVertexArrays();
		glBindVertexArray(vao);
		
		int vbo = glGenBuffers();
		
		glBindBuffer(GL_ARRAY_BUFFER, vbo);
		glBufferData(GL_ARRAY_BUFFER, vertexBuffer, GL_STATIC_DRAW);
		
		glVertexAttribPointer(0, 3, GL11.GL_FLOAT, false, 0, 0);
	}
	
	@Override
	public void update() {
		
	}

	@Override
	public void render() {
		
	}

}
